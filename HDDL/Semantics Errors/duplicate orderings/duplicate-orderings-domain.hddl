;;
;; PDDL file for the AIPS2000 Planning Competition
;; based on the data generated by the airport simulator Astras.
;;

;; Author: Sebastian Trueg thisshouldbethecurrentdateandtime :(
;; Created with PreInstancerDomainExporter 0.6 by Sebastian Trueg <trueg@informatik.uni-freiburg.de>
;;
;; adapted by Kayleigh Sleath to run (very badly) in a HDDL planner 17/4/23
;; note that this domain is NO LONGER INTENDED TO SOLVE ANYTHING.
;; It has been adapted from a PDDL domain to fit the syntax (but not the semantics) of a HDDL file 
;; in order to test error messages provided by HDDL planning software.

;; testing diagnosis of: duplicate orderings (line 94)


(define (domain airport_fixed_structure)

(:requirements :typing :strips)

(:types airplane segment direction airplanetype)

(:constants
                north
                south - direction

                light
                medium
                heavy - airplanetype

                seg_pp_0_60
                seg_ppdoor_0_40
                seg_tww1_0_200
                seg_twe1_0_200
                seg_tww2_0_50
                seg_tww3_0_50
                seg_tww4_0_50
                seg_rww_0_50
                seg_rwtw1_0_10
                seg_rw_0_400
                seg_rwe_0_50
                seg_twe4_0_50
                seg_rwte1_0_10
                seg_twe3_0_50
                seg_twe2_0_50
                seg_rwte2_0_10
                seg_rwtw2_0_10 - segment

                airplane_CFBEG - airplane
)

(:predicates
                ;; airport information
                (has-type ?a - airplane ?t - airplanetype)
                ;; plane a has type t
                (at-segment ?a - airplane ?s - segment)
                ;; planes are at segments, ie at their end in driving direction
                (facing ?a - airplane ?d - direction)
                ;; planes face into their driving direction

                ;; how the planes affect the airport
                (occupied ?s - segment)
                ;; a plane is in here
                (not_occupied ?s - segment)
                (blocked ?s - segment ?a - airplane)
                ;; segment s is blocked if it is endangered by plane p
                (not_blocked ?s - segment ?a - airplane)

                ;; an airplane may lineup on segment s when facing d
                (is-start-runway ?s - segment ?d - direction)

                ;; airplane a is starting from runway s
                (airborne ?a - airplane ?s - segment)

                (is-moving ?a - airplane)
                (is-pushing ?a - airplane)
                (is-parked ?a - airplane ?s - segment)

)

;;ADD THIS TO PDDL DOMAIN TO MAKE HDDL
(:task AchieveSomeGoal :parameters (?a_0 - airplane))

;;ADD THIS TO PDDL DOMAIN TO MAKE HDDL
(:method ParkAirplane
    :parameters (?a_0 - airplane)
    :task(AchieveSomeGoal ?a_0)
    :ordered-subtasks (and
          (t1 (move_seg_ppdoor_0_40_seg_tww1_0_200_north_south_medium ?a_0))  
          (t2 (move_seg_ppdoor_0_40_seg_tww1_0_200_north_south_medium ?a_0))  
          (t3 (move_seg_ppdoor_0_40_seg_tww1_0_200_north_south_medium ?a_0))     
    )
    ;;REDUNDANT ORDERING
    :ordering (and 
          (< t1 t2)
          (< t2 t3)
    )
)

(:action move_seg_pp_0_60_seg_ppdoor_0_40_north_north_medium

 :parameters    (?a - airplane)

 :precondition  (and
                 (has-type ?a medium)
                 (has-type ?a)
                 (is-moving ?a)
                 (facing ?a north)
                 (at-segment ?a seg_pp_0_60)
                 (not_occupied seg_ppdoor_0_40)
                 (not_blocked seg_ppdoor_0_40 airplane_CFBEG)

              )

 :effect        (and
                 (not (occupied seg_pp_0_60))
                 (not_occupied seg_pp_0_60)
                 (not (at-segment ?a seg_pp_0_60))

                 (occupied seg_ppdoor_0_40)
                 (not (not_occupied seg_ppdoor_0_40))
                 (blocked seg_ppdoor_0_40 ?a)
                 (not (not_blocked seg_ppdoor_0_40 ?a))
                 (at-segment ?a seg_ppdoor_0_40)


                )
)

;; REMOVE PRECONDITIONS AND EFFECTS HERE TO MAKE HDDL
(:action move_seg_ppdoor_0_40_seg_tww1_0_200_north_south_medium

 :parameters    (?a - airplane)

 :precondition  ()

 :effect        ()
)
)